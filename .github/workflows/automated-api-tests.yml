name: CMake

on:
  push:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Get latest CMake and Ninja
      uses: lukka/get-cmake@latest
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja -S ${{github.workspace}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --target A_Simple_Api_C_Mongoose
      
    - name: Run Api
      run: ${{github.workspace}}/build/src/A_Simple_Api_C_Mongoose
 
    - name: Install Postman CLI
      run: |
        curl -o- "https://dl-cli.pstmn.io/install/osx_64.sh" | sh
    - name: Login to Postman CLI
      run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
    - name: Run API tests
      run: |
        postman collection run "7779863-874f5270-9a2e-448e-a963-87f8b9b0cbbd" -e "7779863-a2096246-922a-440d-9863-d540e8ff461d"
